{"name":"Manjaro-tools","tagline":"manjaro-tools","body":"# Manjaro-tools-0.9.5\r\n\r\n## User manual\r\n\r\n1. manjaro-tools.conf\r\n\r\nmanjaro-tools.conf is the central configuration file for manjaro-tools.\r\nBy default, the config is installed in /etc/manjaro-tools/manjaro-tools.conf\r\nA user config manjaro-tools.conf can be placed in $HOME/.config.\r\nIf the userconfig is present, manjaro-tools will load userconfig values, however, if variables have been set in the systemwise /etc/manjaro-tools/manjaro-tools.conf, these values take precedence over the userconfig. Best practise is to leave systemwide file untouched, by default it is commented and shows just initialization values done in code.\r\n\r\n1.1. new config files in iso profiles\r\n\r\nEach iso profile must have these files or symlinks to shared:\r\n\r\ninitsys \r\ncontains the init type string, systemd or openrc, could be eg a future runit implemetation too\r\n\r\ndisplaymanager\r\ncontains the DM string\r\nif no DM is used, set it to 'none'\r\n\r\nPackages-Livecd \r\ncontains packages you only want on livecd but not installed on the target system with installer\r\ndault files are in shared folderand can be symlinked or defined in a real file\r\n\r\nIf you need a custom livecd-overlay, create a overlay-livecd folder in your profile, and symlink from shared/overlay-livecd/<your_selection> and add your modification. \r\n\r\n2. buildpkg\r\n\r\nbuildpkg is the chroot build script oi manjaro-tools.\r\nIt it run in a abs/pkgbuilds directory which contains directories with PKGBUILD\r\nIt can be configure with manjaro-tools.conf or by args\r\nbuildpackage creates by default a pkg cache dir in /var/cache/manjaro-tools/\r\nSubdirectories will be created when building for the brach and architecture.\r\n\r\n\r\nA word on makepkg.conf PKGDEST\r\nmanjarotools.conf supports the makepkg.conf variables\r\nIf you set PKGDEST all works fine, but be careful, that your PKGDEST is clean, or else buildpkg will move all files from PKGDEST to cache dir , not only the built package.\r\n\r\n\r\n2.1. Arguments\r\n\r\n\r\nThe help(for x86_64 and manjaro-tools.conf set):\r\n\r\n$ buildpkg -h\r\nUsage: buildpkg [options] [--] [makepkg args]\r\n    -p <profile>       Set profile or pkg [default: default]\r\n    -a <arch>          Set arch  [default: x86_64]\r\n    -b <branch>        Set branch [default: unstable]\r\n    -r <dir>           Chroots directory [default: /srv/manjarobuild]\r\n    -c                 Recreate chroot\r\n    -w                 Clean up\r\n    -n                 Install and run namcap check\r\n    -s                 Sign packages\r\n    -q                 Query settings and pretend build\r\n    -h                 This help\r\n\r\n\r\nExample(assuming default manjaro-tools.conf):\r\n\r\nbuild sysvinit package for both arches and branch testing:\r\n\r\nfirst i686(buildsystem is x86_64)\r\n\r\nbuildpkg -p sysvinit -a i686 -b testing -cwsn\r\n\r\nfor x86_64 and testing\r\n\r\nbuildpkg -p sysvinit -b testing -cswn\r\n\r\nYou can drop the branch arg if you set the branch in manjaro-tools.conf\r\nthe arch can also be set in manjaro-tools.conf, but under normal conditions, it is better to specify the non native arch by -a parameter.\r\n\r\n-c \r\nremoves the chroot dir\r\n-w \r\ncleans pkgcache, and logfiles\r\n-s \r\nsigns the package when built\r\n-n \r\ninstalls the built package in the chroot and runs a namcap check\r\n\r\nIf the -c parameter is not used, buildpkg will update the existing chroot or create a new one if none is present.\r\n\r\n2.2 Sets\r\n\r\nbuildpkg support building from a list of ppkgbuilds\r\nDefault location of sets is /etc/manjaro-tools/manjaro-tools/sets\r\nbut it can be configure in the conf file.\r\n\r\n2.2.1 mkset\r\n\r\nmkset is a little helper tools to easily create sets.\r\nYou run it just like buildpkg in the abs/pkgbuilds dir.\r\n\r\n$ mkset -h\r\nUsage: mkset [options]\r\n    -c <name>   Create set\r\n    -r <name>   Remove set\r\n    -d <name>   Display set\r\n    -q          Show sets\r\n    -h          This help\r\n\r\nExample: create a set for lxqt assuming a pure lxqt abs directory\r\n\r\nmkset -c lxqt-0.8\r\n\r\nThe set name should not be a name of a package, or else buildpkg won't recognize the build list and only bulds the package you specified, since the buildpkg -p arg handles set and package name.\r\n\r\nIf you create a set manually, the set must have a .set extension.\r\n\r\n Example: /etc/manjaro-tools/sets/lxqt-0.8.set\r\n\r\n\r\n\r\n\r\n3. buildiso\r\n\r\nbuildiso is used to build manjaro-iso-profiles. It is run insde a iso profile folder.\r\nIt now supports installing packages in a livecd chroot environment.\r\n\r\nNew packages for livecd only:\r\n\r\nmanjaro-livecd (shared livecd skeletton)\r\nmanjaro-livecd-cli-installer \r\nmanjaro-livecd-openrc (openrc-run scripts for livecd)\r\nmanjaro-livecd-systemd (systemd units for livecd)\r\n\r\n\r\n3.1 Arguments\r\n\r\nThe help:\r\n\r\n$ buildiso -h\r\nUsage: buildiso [options]\r\n    -a <arch>          Set arch\r\n                       [default: x86_64]\r\n    -b <branch>        Set branch\r\n                       [default: unstable]\r\n    -r <dir>           Work directory\r\n                       [default: /srv/manjaroiso]\r\n    -t <dir>           Target iso directory\r\n                       [default: /srv/manjaro-release-iso]\r\n    -i <file>          Config file for pacman\r\n                       [default: /usr/share/manjaro-tools/pacman-default.conf]\r\n    -v                 Verbose iso compression\r\n    -q                 Query settings and pretend build\r\n    -c                 Disable clean work dir and target dir iso\r\n    -z                 Disable high compression\r\n    -A                 Disable auto configure services\r\n    -B                 Build images only\r\n    -G                 Generate iso only\r\n                       Requires pre built images\r\n    -P                 Disable clean pkgs cache\r\n    -L                 Disable clean lng cache\r\n    -h                 This help\r\n\r\n\r\nExample: build xfce iso profile for both arches and branch testing on x86_64 build system:\r\n\r\nbuildiso -v -a i686 -b testing \r\n\r\nbuildiso -v -b testing\r\n\r\nthe branch can be defined also in manjaro-tools.conf, but a manual parameter will always override conf settings.\r\n\r\n\r\n3.1.1 Default parameteres set\r\n\r\n-c\r\nclean work dir & target dir, disabled will likely produce an error since work dir already exists\r\n\r\n-z\r\nhigh compression\r\n\r\n-A\r\nauto service configuration\r\n\r\n\r\n3.1.2 Special parameters\r\n\r\n-A\r\nBy default, buildiso auto configures services on both DE image and livecd image. This can be set in manjaro-tools.cong. Using this parmater will disable auto config. The result is, that any service configuration in iso profiles was removed. This parameter serves as custom parameter if you chose to confiogre services in the profile.\r\n\r\n-B\r\n\r\nBuild images only will stop after all packages have been installed. No iso sqfs compression will be executed\r\n\r\n-G\r\nUse this if you previously used -B to sqfs compress the chroots.\r\n\r\n-P\r\nBy default, xorg package cache is cleaned on every build. Disabling the xorg cache cleaning will result in no dowload again for xorg drivers and the cache is used. Be careful with this option if you switch arches, it currently does not detect the pkg arch in the cache. So don't use it if you build for a different arch first time.\r\n\r\n-L\r\nDisable lng cache, by default lng cache is cleaned on every build. Uning this option will enable lng packages from cache rather than downloading them again.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}